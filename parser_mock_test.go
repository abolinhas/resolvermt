// Code generated by MockGen. DO NOT EDIT.
// Source: parser.go

// Package multidns is a generated GoMock package.
package multidns

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dns "github.com/miekg/dns"
)

// Mockparser is a mock of parser interface.
type Mockparser struct {
	ctrl     *gomock.Controller
	recorder *MockparserMockRecorder
}

// MockparserMockRecorder is the mock recorder for Mockparser.
type MockparserMockRecorder struct {
	mock *Mockparser
}

// NewMockparser creates a new mock instance.
func NewMockparser(ctrl *gomock.Controller) *Mockparser {
	mock := &Mockparser{ctrl: ctrl}
	mock.recorder = &MockparserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockparser) EXPECT() *MockparserMockRecorder {
	return m.recorder
}

// Parse mocks base method.
func (m *Mockparser) Parse(query string, msg *dns.Msg) []Record {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Parse", query, msg)
	ret0, _ := ret[0].([]Record)
	return ret0
}

// Parse indicates an expected call of Parse.
func (mr *MockparserMockRecorder) Parse(query, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Parse", reflect.TypeOf((*Mockparser)(nil).Parse), query, msg)
}
